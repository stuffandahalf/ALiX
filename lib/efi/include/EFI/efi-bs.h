#ifndef __EFI_BS_H
#define __EFI_BS_H	1

#include "efi-types.h"

/* Event services */
typedef VOID *	EFI_EVENT;

typedef VOID (EFIAPI *EFI_EVENT_NOTIFY) (IN EFI_EVENT Event,
	IN VOID *Context);

typedef EFI_STATUS (EFIAPI *EFI_CREATE_EVENT) (IN UINT32 Type,
	IN EFI_TPL NotifyTpl, IN EFI_EVENT_NOTIFY NotifyFunction OPTIONAL,
	IN VOID *NotifyContext OPTIONAL, OUT EFI_EVENT *Event);

typedef EFI_STATUS (EFIAPI *EFI_CREATE_EVENT_EX) (IN UINT32 Type,
	IN EFI_TPL NotifyTpl, IN EFI_EVENT_NOTIFY NotifyFunction OPTIONAL,
	IN CONST VOID *NotifyContext OPTIONAL,
	IN CONST EFI_GUID *EventGroup OPTIONAL, OUT EFI_EVENT *Event);

typedef struct {
	EFI_TABLE_HEADER	Hdr;
	#error Complete this
} EFI_BOOT_SERVICES;

#define EFI_BOOT_SERVICES_SIGNATURE			0x56524553544f4f42
#define EFI_BOOT_SERVICES_REVISION			EFI_SPECIFICATION_VERSION

#define EVT_TIMER							0x80000000
#define EVT_RUNTIME							0x40000000

#define EVT_NOTIFY_WAIT						0x00000100
#define EVT_NOTIFY_SIGNAL					0x00000200

#define EVT_SIGNAL_EXIT_BOOT_SERVICES		0x00000201
#define EVT_SIGNAL_VIRTUAL_ADDRESS_CHANGE	0x60000202

#endif /* __EFI_BS_H */
