#!/bin/sh

# functions to simplify makefile generation
emit() {
	echo "$DIR$OUT_MAKEFILE" >&2
	printf "$@" >> "$DIR$OUT_MAKEFILE"
}

src2obj() {
	for SRC in $@; do
		printf "$SRC" | sed -e "s/\..*$/\.o /"
	done
}

# Build Variables

TARGET=i386
export TARGET

# Makefile configuration input file
IN_MAKEFILE=make.conf
export IN_MAKEFILE
# Makefile output file
OUT_MAKEFILE=makefile
export OUT_MAKEFILE

# Determine current directory
DIR="$PWD/"
if [ $# -gt 0 ]; then
	DIR="$1"
fi

# Lookup subdirectories
SUBDIRS=`ls -d "$DIR"*/ 2> /dev/null`
# Recurse through subdirectories and configure them
if [ $? -eq 0 ]; then
	for SUBDIR in $SUBDIRS; do
		echo "ENTERING $SUBDIR"
		$0 "$SUBDIR"
		echo "LEAVING $SUBDIR"
	done
fi

set -e

# look for makefile configuration file

if [ ! -f "$DIR/$IN_MAKEFILE" ]; then
	exit 1
fi

# Import directory make variables as shell variables
. "$DIR/$IN_MAKEFILE"

SUBDIR_TARGETS=
for SUBDIR in $SUBDIRS; do
	SUBDIR_TARGETS="$SUBDIR_TARGETS $SUBDIR.dir"
done

echo "CREATING $DIR$OUT_MAKEFILE"

# create output file
if [ -e "$DIR$OUT_MAKEFILE" ]; then
	rm -f "$DIR$OUT_MAKEFILE"
fi
touch "$DIR$OUT_MAKEFILE"
BUILD_SOURCES=
BUILD_ARTIFACTS=

# write output file
emit ".POSIX:\n"
emit "\n"
emit "all: $SUBDIR_TARGETS $TARGETS $STATIC_LIB_TARGETS $DYNAMIC_LIB_TARGETS\n"
emit "\n"
for SUBDIR in $SUBDIRS; do
	emit "$SUBDIR.dir: $SUBDIR\n"
	emit "\tcd \"$SUBDIR\" && \$(MAKE) all\n"
	emit "\n"
done
for TARGET in $TARGETS; do
	# evaluate target variables
	eval "SOURCES=\${${TARGET}_SOURCES}"
	OBJECTS="`src2obj $SOURCES`"

	echo "$TARGET" >&2
	echo "$SOURCES" >&2
	echo "$OBJECTS" >&2
	BUILD_SOURCES="$BUILD_SOURCES $SOURCES"
	BUILD_ARTIFACTS="$BUILD_ARTIFACTS $OBJECTS"

	emit "$TARGET: $OBJECTS\n"
	emit "\t\$(CC) \$(LDFLAGS) -o $TARGET $OBJECTS\n"
	emit "\n"
done
for STATIC_LIB in $STATIC_LIB_TARGETS; do
	# evaluate library variables
	eval "SOURCES=\${$STATIC_LIB}_SOURCES}"
	OBJECTS="`src2obj $SOURCES`"
	BUILD_SOURCES="$BUILD_SOURCES $SOURCES"
	BUILD_ARTIFACTS="$BUILD_ARTIFACTS $OBJECTS"

	# TODO: emit target linking
done
for DYNAMIC_LIB in $DYNAMIC_LIB_TARGETS; do
	# evaluate library variables
	eval "SOURCES=\${$DYNAMIC_LIB}_SOURCES}"
	OBJECTS="`src2obj $SOURCES`"
	BUILD_SOURCES="$BUILD_SOURCES $SOURCES"
	BUILD_ARTIFACTS="$BUILD_ARTIFACTS $OBJECTS"

	# TODO: emit target linking
done
for SOURCE in $BUILD_SOURCES; do
	emit "`src2obj $SOURCE`: $SOURCE\n"
	emit "\t\$(CC) \$(CFLAGS) -c -o `src2obj $SOURCE` $SOURCE\n"
	emit "\n"
done
emit "clean:\n"
for SUBDIR in $SUBDIRS; do
	emit "\tcd \"$SUBDIR\" && \$(MAKE) clean\n"
done
for ARTIFACT in $BUILD_ARTIFACTS; do
	emit "\trm -f $ARTIFACT\n"
done
for TARGET in $TARGETS; do
	emit "\trm -f $TARGET\n"
done
for STATIC_LIB in $STATIC_LIB_TARGETS; do
	emit "\trm -f $STATIC_LIB\n"
done
for DYNAMIC_LIB in $DYNAMIC_LIB_TARGETS; do
	emit "\trm -f $DYNAMIC_LIB\n"
done
emit "\n"

